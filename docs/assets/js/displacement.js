!function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=38)}([function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var i=n(29)("wks"),r=n(30),o=n(0).Symbol,a="function"==typeof o;(e.exports=function(e){return i[e]||(i[e]=a&&o[e]||(a?o:r)("Symbol."+e))}).store=i},function(e,t){var n=e.exports={version:"2.5.4"};"number"==typeof __e&&(__e=n)},function(e,t,n){var i=n(9);e.exports=function(e){if(!i(e))throw TypeError(e+" is not an object!");return e}},function(e,t){e.exports="#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nvoid main() {\n  gl_Position = vec4(position, 1.0);\n}\n"},function(e,t,n){var i=n(8),r=n(25);e.exports=n(6)?function(e,t,n){return i.f(e,t,r(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){e.exports=!n(24)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){var i=n(0),r=n(2),o=n(11),a=n(5),s=n(13),u=function(e,t,n){var c,l,f,v=e&u.F,x=e&u.G,h=e&u.S,p=e&u.P,d=e&u.B,m=e&u.W,y=x?r:r[t]||(r[t]={}),g=y.prototype,_=x?i:h?i[t]:(i[t]||{}).prototype;x&&(n=t);for(c in n)(l=!v&&_&&void 0!==_[c])&&s(y,c)||(f=l?_[c]:n[c],y[c]=x&&"function"!=typeof _[c]?n[c]:d&&l?o(f,i):m&&_[c]==f?function(e){var t=function(t,n,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,i)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):p&&"function"==typeof f?o(Function.call,f):f,p&&((y.virtual||(y.virtual={}))[c]=f,e&u.R&&g&&!g[c]&&a(g,c,f)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t,n){var i=n(3),r=n(44),o=n(45),a=Object.defineProperty;t.f=n(6)?Object.defineProperty:function(e,t,n){if(i(e),t=o(t,!0),i(n),r)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){e.exports={}},function(e,t,n){var i=n(12);e.exports=function(e,t,n){if(i(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){"use strict";t.__esModule=!0;var i=n(41),r=function(e){return e&&e.__esModule?e:{default:e}}(i);t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),(0,r.default)(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}()},function(e,t,n){var i=n(9),r=n(0).document,o=i(r)&&i(r.createElement);e.exports=function(e){return o?r.createElement(e):{}}},function(e,t){var n=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:n)(e)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var i=n(58),r=n(19);e.exports=function(e){return i(r(e))}},function(e,t,n){var i=n(29)("keys"),r=n(30);e.exports=function(e){return i[e]||(i[e]=r(e))}},function(e,t,n){var i=n(8).f,r=n(13),o=n(1)("toStringTag");e.exports=function(e,t,n){e&&!r(e=n?e:e.prototype,o)&&i(e,o,{configurable:!0,value:t})}},function(e,t,n){"use strict";function i(e){var t,n;this.promise=new e(function(e,i){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=i}),this.resolve=r(t),this.reject=r(n)}var r=n(12);e.exports.f=function(e){return new i(e)}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){"use strict";var i=n(27),r=n(7),o=n(52),a=n(5),s=n(10),u=n(53),c=n(22),l=n(61),f=n(1)("iterator"),v=!([].keys&&"next"in[].keys()),x=function(){return this};e.exports=function(e,t,n,h,p,d,m){u(n,t,h);var y,g,_,T=function(e){if(!v&&e in M)return M[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},w=t+" Iterator",P="values"==p,R=!1,M=e.prototype,b=M[f]||M["@@iterator"]||p&&M[p],S=b||T(p),C=p?P?T("entries"):S:void 0,E="Array"==t?M.entries||b:b;if(E&&(_=l(E.call(new e)))!==Object.prototype&&_.next&&(c(_,w,!0),i||"function"==typeof _[f]||a(_,f,x)),P&&b&&"values"!==b.name&&(R=!0,S=function(){return b.call(this)}),i&&!m||!v&&!R&&M[f]||a(M,f,S),s[t]=S,s[w]=x,p)if(y={values:P?S:T("values"),keys:d?S:T("keys"),entries:C},m)for(g in y)g in M||o(M,g,y[g]);else r(r.P+r.F*(v||R),t,y);return y}},function(e,t){e.exports=!0},function(e,t,n){var i=n(18),r=Math.min;e.exports=function(e){return e>0?r(i(e),9007199254740991):0}},function(e,t,n){var i=n(0),r=i["__core-js_shared__"]||(i["__core-js_shared__"]={});e.exports=function(e){return r[e]||(r[e]={})}},function(e,t){var n=0,i=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+i).toString(36))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var i=n(0).document;e.exports=i&&i.documentElement},function(e,t,n){var i=n(14),r=n(1)("toStringTag"),o="Arguments"==i(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,n,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=a(t=Object(e),r))?n:o?i(t):"Object"==(s=i(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,n){var i=n(3),r=n(12),o=n(1)("species");e.exports=function(e,t){var n,a=i(e).constructor;return void 0===a||void 0==(n=i(a)[o])?t:r(n)}},function(e,t,n){var i,r,o,a=n(11),s=n(73),u=n(32),c=n(17),l=n(0),f=l.process,v=l.setImmediate,x=l.clearImmediate,h=l.MessageChannel,p=l.Dispatch,d=0,m={},y=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},g=function(e){y.call(e.data)};v&&x||(v=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return m[++d]=function(){s("function"==typeof e?e:Function(e),t)},i(d),d},x=function(e){delete m[e]},"process"==n(14)(f)?i=function(e){f.nextTick(a(y,e,1))}:p&&p.now?i=function(e){p.now(a(y,e,1))}:h?(r=new h,o=r.port2,r.port1.onmessage=g,i=a(o.postMessage,o,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(i=function(e){l.postMessage(e+"","*")},l.addEventListener("message",g,!1)):i="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),y.call(e)}}:function(e){setTimeout(a(y,e,1),0)}),e.exports={set:v,clear:x}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var i=n(3),r=n(9),o=n(23);e.exports=function(e,t){if(i(e),r(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){e.exports=n(39)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,r=n(40),o=n(88);i="sample",window[i]=window[i]||{},window.log=o.a,document.addEventListener("DOMContentLoaded",function(e){return new r.a})},function(e,t,n){"use strict";var i=n(15),r=n.n(i),o=n(16),a=n.n(o),s=n(46);window.glitch=window.glitch||{},t.a=function(){function e(){var t=this;r()(this,e),this.resize=this.resize.bind(this),this.mouseMove=this.mouseMove.bind(this),this.touchMove=this.touchMove.bind(this),this.update=this.update.bind(this),this.initWebGL().then(function(){return t.animationId=null,t.startTime=(new Date).getTime(),t.update()})}return a()(e,[{key:"initWebGL",value:function(){var e,t=this;return this.container=document.querySelector(".js-mainCanvas"),this.renderer=new THREE.WebGLRenderer({canvas:this.container.querySelector("canvas"),alpha:!0}),this.devicePixelRatio=1,this.renderer.setPixelRatio(this.devicePixelRatio),this.scene=new THREE.Scene,this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.camera=new THREE.OrthographicCamera(.5*-this.width,.5*this.width,.5*this.height,.5*-this.height,0,100),this.camera.position.z=10,null==this.renderer.extensions.get("OES_texture_float")&&null==this.renderer.extensions.get("OES_texture_half_float")&&alert("not supported"),this.fluid=new s.a(this.devicePixelRatio,this.renderer,this.camera),this.isMousePosInited=!1,this.beforePointerPos=new THREE.Vector2,this.pointerX=null,this.pointerY=null,window.addEventListener("resize",this.resize),window.addEventListener("mousemove",this.mouseMove),window.addEventListener("touchmove",this.touchMove),e=this.fluid.init("/fluidSimulation2D/assets/img/logo.png",this.width,this.height).then(function(){return t.scene.add(t.fluid.mesh),t.resize()}),this.resize(),e}},{key:"resize",value:function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer.setSize(this.width,this.height),this.camera.top=.5*this.height,this.camera.bottom=.5*-this.height,this.camera.left=.5*-this.width,this.camera.right=.5*this.width,this.camera.updateProjectionMatrix(),this.fluid.resize(this.width,this.height)}},{key:"updatePointerPos",value:function(e,t){}},{key:"mouseMove",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.pointerX=e.clientX,this.pointerY=e.clientY}},{key:"touchMove",value:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;e=t.touches[0],this.pointerX=e.clientX,this.pointerY=e.clientY}},{key:"update",value:function(){var e,t;this.animationId=requestAnimationFrame(this.update),t=(new Date).getTime()-this.startTime,e=new THREE.Vector2,null!=this.pointerX&&(this.isMousePosInited?e.set(this.pointerX,this.pointerY):(this.isMousePosInited=!0,e=this.beforePointerPos)),this.fluid.update(t,e,this.beforePointerPos),this.renderer.render(this.scene,this.camera),this.beforePointerPos=e}}]),e}()},function(e,t,n){e.exports={default:n(42),__esModule:!0}},function(e,t,n){n(43);var i=n(2).Object;e.exports=function(e,t,n){return i.defineProperty(e,t,n)}},function(e,t,n){var i=n(7);i(i.S+i.F*!n(6),"Object",{defineProperty:n(8).f})},function(e,t,n){e.exports=!n(6)&&!n(24)(function(){return 7!=Object.defineProperty(n(17)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var i=n(9);e.exports=function(e,t){if(!i(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!i(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){"use strict";var i=n(47),r=n.n(i),o=n(15),a=n.n(o),s=n(16),u=n.n(s),c=n(80);t.a=function(){function e(t,n,i){a()(this,e),this.update=this.update.bind(this),this.resize=this.resize.bind(this),this.devicePixelRatio=t,this.renderer=n,this.camera=i}return u()(e,[{key:"init",value:function(e,t,i){var o,a,s,u=this;return this.dataTexPixelRatio=.4,this.solverIteration=20,this.attenuation=1,this.alpha=1,this.beta=1,this.viscosity=.999,this.forceRadius=90,this.forceCoefficient=1,this.autoforceCoefficient=0,o=new THREE.PlaneGeometry(10,10),this.shaderMaterials={render:new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(81),depthTest:!1,depthWrite:!1,transparent:!0,uniforms:{time:{type:"1f",value:0},texPixelRatio:{type:"1f",value:this.dataTexPixelRatio},dataTex:{type:"t",value:null},outputImgTex:{type:"t",value:null},resolution:{type:"2f",value:null},devicePixelRatio:{type:"1f",value:this.devicePixelRatio}}}),updateDivergence:new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(82),depthTest:!1,depthWrite:!1,uniforms:{texPixelRatio:{type:"1f",value:this.dataTexPixelRatio},resolution:{type:"2f",value:null},dataTex:{type:"t",value:null}}}),updatePressure:new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(83),depthTest:!1,depthWrite:!1,uniforms:{texPixelRatio:{type:"1f",value:this.dataTexPixelRatio},resolution:{type:"2f",value:null},dataTex:{type:"t",value:0},alpha:{type:"1f",value:this.alpha},beta:{type:"1f",value:this.beta}}}),updateVelocity:new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(84),depthTest:!1,depthWrite:!1,uniforms:{time:{type:"1f",value:0},texPixelRatio:{type:"1f",value:this.dataTexPixelRatio},viscosity:{type:"1f",value:this.viscosity},forceRadius:{type:"1f",value:this.forceRadius},forceCoefficient:{type:"1f",value:this.forceCoefficient},autoforceCoefficient:{type:"1f",value:this.autoforceCoefficient},resolution:{type:"2f",value:null},dataTex:{type:"t",value:null},pointerPos:{type:"2f",value:null},beforePointerPos:{type:"2f",value:null}}}),advectData:new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(85),depthTest:!1,depthWrite:!1,uniforms:{resolution:{type:"2f",value:null},texPixelRatio:{type:"1f",value:this.dataTexPixelRatio},dataTex:{type:"t",value:null},attenuation:{type:"1f",value:this.attenuation}}}),initRenderImg:new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(86),depthTest:!1,depthWrite:!1,uniforms:{time:{type:"1f",value:0},texPixelRatio:{type:"1f",value:this.devicePixelRatio},tex:{type:"t",value:null},texResolution:{type:"2f",value:new THREE.Vector2},resolution:{type:"2f",value:new THREE.Vector2(t,i)}}})},a=new THREE.RawShaderMaterial({vertexShader:n(4),fragmentShader:n(87),depthTest:!1,depthWrite:!1}),s=/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?THREE.HalfFloatType:THREE.FloatType,this.dataTex=new c.a(Math.round(t*this.dataTexPixelRatio),Math.round(i*this.dataTexPixelRatio),this.renderer,this.camera,a,a.clone(),s,o),this.mesh=new THREE.Mesh(o,this.shaderMaterials.render),new r.a(function(n){return(new THREE.TextureLoader).load(e,function(e){return e.wrapS=THREE.RepeatWrapping,e.wrapT=THREE.RepeatWrapping,u.setShaderUniform("initRenderImg","tex",e),u.setShaderUniform("initRenderImg","texResolution",new THREE.Vector2(e.image.width,e.image.height)),e.needsUpdate=!0,u.outputImgTex=new c.a(t,i,u.renderer,u.camera,u.shaderMaterials.initRenderImg,u.shaderMaterials.initRenderImg.clone(),s,o),u.setShaderUniform("render","outputImgTex",u.outputImgTex.getTexture()),n()})})}},{key:"setParameters",value:function(){this.setShaderUniform("updateDivergence","texPixelRatio",this.dataTexPixelRatio),this.setShaderUniform("updatePressure","texPixelRatio",this.dataTexPixelRatio),this.setShaderUniform("updateVelocity","texPixelRatio",this.dataTexPixelRatio),this.setShaderUniform("advectData","texPixelRatio",this.dataTexPixelRatio),this.setShaderUniform("advectData","attenuation",this.attenuation),this.setShaderUniform("updatePressure","alpha",this.alpha),this.setShaderUniform("updatePressure","beta",this.beta),this.setShaderUniform("updateVelocity","viscosity",this.viscosity),this.setShaderUniform("updateVelocity","forceRadius",this.forceRadius),this.setShaderUniform("updateVelocity","forceCoefficient",this.forceCoefficient),this.setShaderUniform("updateVelocity","autoforceCoefficient",this.autoforceCoefficient)}},{key:"updateData",value:function(e){this.setShaderUniform(e,"dataTex",this.dataTex.getTexture()),this.dataTex.swapTexture(),this.dataTex.setMeshMaterial(this.shaderMaterials[e]),this.renderer.render(this.dataTex.scene,this.dataTex.camera,this.dataTex.getRenderTarget())}},{key:"setShaderUniform",value:function(e,t,n){var i;null!=(i=this.shaderMaterials[e].uniforms[t])&&(i.value=n),this.shaderMaterials[e].needsUpdate=!0}},{key:"update",value:function(e,t,n){var i,r;for(this.updateData("updateDivergence"),i=0,r=this.solverIteration;0<=r?i<r:i>r;0<=r?++i:--i)this.updateData("updatePressure");this.setShaderUniform("updateVelocity","time",e),this.setShaderUniform("updateVelocity","pointerPos",t),this.setShaderUniform("updateVelocity","beforePointerPos",n),this.updateData("updateVelocity"),this.updateData("advectData"),this.setShaderUniform("render","time",e),this.setShaderUniform("render","dataTex",this.dataTex.getTexture()),this.setShaderUniform("render","outputImgTex",this.outputImgTex.getTexture())}},{key:"reset",value:function(){}},{key:"resize",value:function(e,t){var n,i,r,o;i=this.shaderMaterials;for(n in i)i[n],this.setShaderUniform(n,"resolution",new THREE.Vector2(e,t));o=Math.round(e*this.dataTexPixelRatio),r=Math.round(t*this.dataTexPixelRatio),this.dataTex.resize(o,r),this.dataTex.reset(),null!=this.outputImgTex&&(this.outputImgTex.resize(e*this.devicePixelRatio,t*this.devicePixelRatio),this.outputImgTex.reset())}}]),e}()},function(e,t,n){e.exports={default:n(48),__esModule:!0}},function(e,t,n){n(49),n(50),n(63),n(67),n(78),n(79),e.exports=n(2).Promise},function(e,t){},function(e,t,n){"use strict";var i=n(51)(!0);n(26)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=i(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){var i=n(18),r=n(19);e.exports=function(e){return function(t,n){var o,a,s=String(r(t)),u=i(n),c=s.length;return u<0||u>=c?e?"":void 0:(o=s.charCodeAt(u),o<55296||o>56319||u+1===c||(a=s.charCodeAt(u+1))<56320||a>57343?e?s.charAt(u):o:e?s.slice(u,u+2):a-56320+(o-55296<<10)+65536)}}},function(e,t,n){e.exports=n(5)},function(e,t,n){"use strict";var i=n(54),r=n(25),o=n(22),a={};n(5)(a,n(1)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=i(a,{next:r(1,n)}),o(e,t+" Iterator")}},function(e,t,n){var i=n(3),r=n(55),o=n(31),a=n(21)("IE_PROTO"),s=function(){},u=function(){var e,t=n(17)("iframe"),i=o.length;for(t.style.display="none",n(32).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;i--;)delete u.prototype[o[i]];return u()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=i(e),n=new s,s.prototype=null,n[a]=e):n=u(),void 0===t?n:r(n,t)}},function(e,t,n){var i=n(8),r=n(3),o=n(56);e.exports=n(6)?Object.defineProperties:function(e,t){r(e);for(var n,a=o(t),s=a.length,u=0;s>u;)i.f(e,n=a[u++],t[n]);return e}},function(e,t,n){var i=n(57),r=n(31);e.exports=Object.keys||function(e){return i(e,r)}},function(e,t,n){var i=n(13),r=n(20),o=n(59)(!1),a=n(21)("IE_PROTO");e.exports=function(e,t){var n,s=r(e),u=0,c=[];for(n in s)n!=a&&i(s,n)&&c.push(n);for(;t.length>u;)i(s,n=t[u++])&&(~o(c,n)||c.push(n));return c}},function(e,t,n){var i=n(14);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==i(e)?e.split(""):Object(e)}},function(e,t,n){var i=n(20),r=n(28),o=n(60);e.exports=function(e){return function(t,n,a){var s,u=i(t),c=r(u.length),l=o(a,c);if(e&&n!=n){for(;c>l;)if((s=u[l++])!=s)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===n)return e||l||0;return!e&&-1}}},function(e,t,n){var i=n(18),r=Math.max,o=Math.min;e.exports=function(e,t){return e=i(e),e<0?r(e+t,0):o(e,t)}},function(e,t,n){var i=n(13),r=n(62),o=n(21)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),i(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){var i=n(19);e.exports=function(e){return Object(i(e))}},function(e,t,n){n(64);for(var i=n(0),r=n(5),o=n(10),a=n(1)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<s.length;u++){var c=s[u],l=i[c],f=l&&l.prototype;f&&!f[a]&&r(f,a,c),o[c]=o.Array}},function(e,t,n){"use strict";var i=n(65),r=n(66),o=n(10),a=n(20);e.exports=n(26)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,r(1)):"keys"==t?r(0,n):"values"==t?r(0,e[n]):r(0,[n,e[n]])},"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var i,r,o,a,s=n(27),u=n(0),c=n(11),l=n(33),f=n(7),v=n(9),x=n(12),h=n(68),p=n(69),d=n(34),m=n(35).set,y=n(74)(),g=n(23),_=n(36),T=n(37),w=u.TypeError,P=u.process,R=u.Promise,M="process"==l(P),b=function(){},S=r=g.f,C=!!function(){try{var e=R.resolve(1),t=(e.constructor={})[n(1)("species")]=function(e){e(b,b)};return(M||"function"==typeof PromiseRejectionEvent)&&e.then(b)instanceof t}catch(e){}}(),E=function(e){var t;return!(!v(e)||"function"!=typeof(t=e.then))&&t},O=function(e,t){if(!e._n){e._n=!0;var n=e._c;y(function(){for(var i=e._v,r=1==e._s,o=0;n.length>o;)!function(t){var n,o,a,s=r?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{s?(r||(2==e._h&&z(e),e._h=1),!0===s?n=i:(l&&l.enter(),n=s(i),l&&(l.exit(),a=!0)),n===t.promise?c(w("Promise-chain cycle")):(o=E(n))?o.call(n,u,c):u(n)):c(i)}catch(e){l&&!a&&l.exit(),c(e)}}(n[o++]);e._c=[],e._n=!1,t&&!e._h&&L(e)})}},L=function(e){m.call(u,function(){var t,n,i,r=e._v,o=j(e);if(o&&(t=_(function(){M?P.emit("unhandledRejection",r,e):(n=u.onunhandledrejection)?n({promise:e,reason:r}):(i=u.console)&&i.error&&i.error("Unhandled promise rejection",r)}),e._h=M||j(e)?2:1),e._a=void 0,o&&t.e)throw t.v})},j=function(e){return 1!==e._h&&0===(e._a||e._c).length},z=function(e){m.call(u,function(){var t;M?P.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},F=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),O(t,!0))},D=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw w("Promise can't be resolved itself");(t=E(e))?y(function(){var i={_w:n,_d:!1};try{t.call(e,c(D,i,1),c(F,i,1))}catch(e){F.call(i,e)}}):(n._v=e,n._s=1,O(n,!1))}catch(e){F.call({_w:n,_d:!1},e)}}};C||(R=function(e){h(this,R,"Promise","_h"),x(e),i.call(this);try{e(c(D,this,1),c(F,this,1))}catch(e){F.call(this,e)}},i=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},i.prototype=n(75)(R.prototype,{then:function(e,t){var n=S(d(this,R));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=M?P.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&O(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new i;this.promise=e,this.resolve=c(D,e,1),this.reject=c(F,e,1)},g.f=S=function(e){return e===R||e===a?new o(e):r(e)}),f(f.G+f.W+f.F*!C,{Promise:R}),n(22)(R,"Promise"),n(76)("Promise"),a=n(2).Promise,f(f.S+f.F*!C,"Promise",{reject:function(e){var t=S(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(s||!C),"Promise",{resolve:function(e){return T(s&&this===a?R:this,e)}}),f(f.S+f.F*!(C&&n(77)(function(e){R.all(e).catch(b)})),"Promise",{all:function(e){var t=this,n=S(t),i=n.resolve,r=n.reject,o=_(function(){var n=[],o=0,a=1;p(e,!1,function(e){var s=o++,u=!1;n.push(void 0),a++,t.resolve(e).then(function(e){u||(u=!0,n[s]=e,--a||i(n))},r)}),--a||i(n)});return o.e&&r(o.v),n.promise},race:function(e){var t=this,n=S(t),i=n.reject,r=_(function(){p(e,!1,function(e){t.resolve(e).then(n.resolve,i)})});return r.e&&i(r.v),n.promise}})},function(e,t){e.exports=function(e,t,n,i){if(!(e instanceof t)||void 0!==i&&i in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var i=n(11),r=n(70),o=n(71),a=n(3),s=n(28),u=n(72),c={},l={},t=e.exports=function(e,t,n,f,v){var x,h,p,d,m=v?function(){return e}:u(e),y=i(n,f,t?2:1),g=0;if("function"!=typeof m)throw TypeError(e+" is not iterable!");if(o(m)){for(x=s(e.length);x>g;g++)if((d=t?y(a(h=e[g])[0],h[1]):y(e[g]))===c||d===l)return d}else for(p=m.call(e);!(h=p.next()).done;)if((d=r(p,y,h.value,t))===c||d===l)return d};t.BREAK=c,t.RETURN=l},function(e,t,n){var i=n(3);e.exports=function(e,t,n,r){try{return r?t(i(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&i(o.call(e)),t}}},function(e,t,n){var i=n(10),r=n(1)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||o[r]===e)}},function(e,t,n){var i=n(33),r=n(1)("iterator"),o=n(10);e.exports=n(2).getIteratorMethod=function(e){if(void 0!=e)return e[r]||e["@@iterator"]||o[i(e)]}},function(e,t){e.exports=function(e,t,n){var i=void 0===n;switch(t.length){case 0:return i?e():e.call(n);case 1:return i?e(t[0]):e.call(n,t[0]);case 2:return i?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return i?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return i?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var i=n(0),r=n(35).set,o=i.MutationObserver||i.WebKitMutationObserver,a=i.process,s=i.Promise,u="process"==n(14)(a);e.exports=function(){var e,t,n,c=function(){var i,r;for(u&&(i=a.domain)&&i.exit();e;){r=e.fn,e=e.next;try{r()}catch(i){throw e?n():t=void 0,i}}t=void 0,i&&i.enter()};if(u)n=function(){a.nextTick(c)};else if(!o||i.navigator&&i.navigator.standalone)if(s&&s.resolve){var l=s.resolve();n=function(){l.then(c)}}else n=function(){r.call(i,c)};else{var f=!0,v=document.createTextNode("");new o(c).observe(v,{characterData:!0}),n=function(){v.data=f=!f}}return function(i){var r={fn:i,next:void 0};t&&(t.next=r),e||(e=r,n()),t=r}}},function(e,t,n){var i=n(5);e.exports=function(e,t,n){for(var r in t)n&&e[r]?e[r]=t[r]:i(e,r,t[r]);return e}},function(e,t,n){"use strict";var i=n(0),r=n(2),o=n(8),a=n(6),s=n(1)("species");e.exports=function(e){var t="function"==typeof r[e]?r[e]:i[e];a&&t&&!t[s]&&o.f(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){var i=n(1)("iterator"),r=!1;try{var o=[7][i]();o.return=function(){r=!0},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!r)return!1;var n=!1;try{var o=[7],a=o[i]();a.next=function(){return{done:n=!0}},o[i]=function(){return a},e(o)}catch(e){}return n}},function(e,t,n){"use strict";var i=n(7),r=n(2),o=n(0),a=n(34),s=n(37);i(i.P+i.R,"Promise",{finally:function(e){var t=a(this,r.Promise||o.Promise),n="function"==typeof e;return this.then(n?function(n){return s(t,e()).then(function(){return n})}:e,n?function(n){return s(t,e()).then(function(){throw n})}:e)}})},function(e,t,n){"use strict";var i=n(7),r=n(23),o=n(36);i(i.S,"Promise",{try:function(e){var t=r.f(this),n=o(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){"use strict";var i=n(15),r=n.n(i),o=n(16),a=n.n(o);t.a=function(){function e(t,n,i,o,a,s,u){var c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;r()(this,e);var l;this.renderer=i,this.camera=o,this.initShaderMaterial=a,this.updateShaderMaterial=s,this.currentTextureIndex=0,this.renderTargets=[new THREE.WebGLRenderTarget(t,n,{magFilter:THREE.NearestFilter,minFilter:THREE.NearestFilter,wrapS:THREE.RepeatWrapping,wrapT:THREE.RepeatWrapping,format:THREE.RGBAFormat,type:u,depthBuffer:!1,stencilBuffer:!1})],this.renderTargets[1]=this.renderTargets[0].clone(),l=null!=c?c:new THREE.PlaneGeometry(100,100),this.mesh=new THREE.Mesh(l,this.initShaderMaterial),this.mesh.material.needsUpdate=!0,this.scene=new THREE.Scene,this.scene.add(this.mesh),this.reset()}return a()(e,[{key:"reset",value:function(){this.mesh.material=this.initShaderMaterial,this.renderer.render(this.scene,this.camera,this.renderTargets[0]),this.renderer.render(this.scene,this.camera,this.renderTargets[1]),this.mesh.material=this.updateShaderMaterial,this.mesh.material.needsUpdate=!0}},{key:"setDefine",value:function(e,t){this.updateShaderMaterial.defines[e]=t}},{key:"initUniforms",value:function(e){var t,n;for(t in e)n=e[t],this.updateShaderMaterial.uniforms[t]=n}},{key:"updateUniform",value:function(e,t){this.updateShaderMaterial.uniforms[e].value=t}},{key:"update",value:function(){this.updateShaderMaterial.uniforms.texture.value=this.getTexture(),this.swapTexture(),this.render()}},{key:"render",value:function(){this.renderer.render(this.scene,this.camera,this.renderTargets[this.currentTextureIndex])}},{key:"setMeshMaterial",value:function(e){this.mesh.material=e,this.mesh.material.needsUpdate=!0}},{key:"swapTexture",value:function(){this.currentTextureIndex=(this.currentTextureIndex+1)%2}},{key:"getTexture",value:function(){return this.getRenderTarget().texture}},{key:"getRenderTarget",value:function(){return this.renderTargets[this.currentTextureIndex]}},{key:"resize",value:function(e,t){this.renderTargets[0].setSize(e,t),this.renderTargets[1].setSize(e,t)}}]),e}()},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform float devicePixelRatio;\nuniform float texPixelRatio;\nuniform vec2 resolution;\nuniform sampler2D dataTex;\nuniform sampler2D outputImgTex;\n\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_4_0(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_4_0(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_4_1(vec3 x) {\n  return mod289_4_0(((x*34.0)+1.0)*x);\n}\n\nfloat snoise_4_2(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_4_0(i); // Avoid truncation effects in permutation\n  vec3 p = permute_4_1( permute_4_1( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\n\nfloat map_1_3(float value, float inputMin, float inputMax, float outputMin, float outputMax, bool clamp) {\n  if(clamp == true) {\n    if(value < inputMin) return outputMin;\n    if(value > inputMax) return outputMax;\n  }\n\n  float p = (outputMax - outputMin) / (inputMax - inputMin);\n  return ((value - inputMin) * p) + outputMin;\n}\n\n\nvec3 hsv2rgb_2_4(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec2 sampleVelocity_3_5(sampler2D tex, vec2 uv, vec2 resolution){\n  vec2 cellOffset = vec2(0.0, 0.0);\n  vec2 multiplier = vec2(1.0, 1.0);\n\n  //free-slip boundary: the average flow across the boundary is restricted to 0\n  //avg(uA.xy, uB.xy) dot (boundary normal).xy = 0\n  //walls\n  if(uv.x < 0.0) {\n    cellOffset.x = 1.0;\n    multiplier.x = -1.0;\n\n  } else if(uv.x > 1.0) {\n    cellOffset.x = -1.0;\n    multiplier.x = -1.0;\n  }\n\n  if(uv.y < 0.0) {\n    cellOffset.y = 1.0;\n    multiplier.y = -1.0;\n\n  } else if(uv.y > 1.0) {\n    cellOffset.y = -1.0;\n    multiplier.y = -1.0;\n  }\n\n  return multiplier * texture2D(tex, uv + cellOffset / resolution).xy;\n}\n\n\n\n\n\nvec4 bilerpColor(sampler2D tex, vec2 p, vec2 resolution) {\n  vec4 ij; // i0, j0, i1, j1\n  ij.xy = floor(p - 0.5) + 0.5;\n  ij.zw = ij.xy + 1.0;\n\n  vec4 uv = ij / resolution.xyxy;\n  vec3 d11 = texture2D(tex, uv.xy).rgb;\n  vec3 d21 = texture2D(tex, uv.zy).rgb;\n  vec3 d12 = texture2D(tex, uv.xw).rgb;\n  vec3 d22 = texture2D(tex, uv.zw).rgb;\n\n  vec2 a = p - ij.xy;\n\n  return vec4(mix(mix(d11, d21, a.x), mix(d12, d22, a.x), a.y), 1.0);\n}\n\nconst float h1 = 0.1;\nconst float h2 = 0.3;\nconst float s1 = 0.0;\nconst float s2 = 0.6;\nconst float v1 = 0.8;\nconst float v2 = 0.9;\n\nvoid main(){\n  vec2 r = resolution * devicePixelRatio;\n  vec2 uv = gl_FragCoord.xy / r;\n\n  vec4 data = texture2D(dataTex, uv);\n  vec2 velocity = data.xy;\n  float pressure = data.z;\n  float vLength = length(velocity);\n\n  vec4 color2 = vec4(hsv2rgb_2_4(vec3(\n    map_1_3(vLength * 0.3, 0.0, 1.0, h1, h2, false) + time * 0.0001,\n    map_1_3(pressure * 0.5, 0.0, 1.0, s1, s2, false),\n    map_1_3(1.0 - vLength * pressure * 0.3, 0.0, 1.0, v1, v2, false)\n  )), 1.0);\n\n  vec2 p = gl_FragCoord.xy - sampleVelocity_3_5(dataTex, uv, r) * 40.0;\n  vec4 color = bilerpColor(outputImgTex, p, r);\n\n  gl_FragColor = color * color2;\n}\n"},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float texPixelRatio;\nuniform vec2 resolution;\nuniform sampler2D dataTex;\n\nvec2 sampleVelocity_1_0(sampler2D tex, vec2 uv, vec2 resolution){\n  vec2 cellOffset = vec2(0.0, 0.0);\n  vec2 multiplier = vec2(1.0, 1.0);\n\n  //free-slip boundary: the average flow across the boundary is restricted to 0\n  //avg(uA.xy, uB.xy) dot (boundary normal).xy = 0\n  //walls\n  if(uv.x < 0.0) {\n    cellOffset.x = 1.0;\n    multiplier.x = -1.0;\n\n  } else if(uv.x > 1.0) {\n    cellOffset.x = -1.0;\n    multiplier.x = -1.0;\n  }\n\n  if(uv.y < 0.0) {\n    cellOffset.y = 1.0;\n    multiplier.y = -1.0;\n\n  } else if(uv.y > 1.0) {\n    cellOffset.y = -1.0;\n    multiplier.y = -1.0;\n  }\n\n  return multiplier * texture2D(tex, uv + cellOffset / resolution).xy;\n}\n\n\n\n\nvoid main(){\n  vec2 r = resolution * texPixelRatio;\n  vec4 data = texture2D(dataTex, gl_FragCoord.xy / r);\n\n  vec2 offsetX = vec2(1.0, 0.0);\n  vec2 offsetY = vec2(0.0, 1.0);\n\n  // 上下左右の速度\n  vec2 vLeft   = sampleVelocity_1_0(dataTex, (gl_FragCoord.xy - offsetX) / r, r);\n  vec2 vRight  = sampleVelocity_1_0(dataTex, (gl_FragCoord.xy + offsetX) / r, r);\n  vec2 vTop    = sampleVelocity_1_0(dataTex, (gl_FragCoord.xy - offsetY) / r, r);\n  vec2 vBottom = sampleVelocity_1_0(dataTex, (gl_FragCoord.xy + offsetY) / r, r);\n\n  float divergence = ((vRight.x - vLeft.x) + (vBottom.y - vTop.y)) * 0.5;\n  gl_FragColor = vec4(data.xy, data.z, divergence);\n}\n"},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float texPixelRatio;\nuniform float alpha;\nuniform float beta;\nuniform vec2 resolution;\nuniform sampler2D dataTex;\n\nfloat samplePressure_1_0(sampler2D tex, vec2 uv, vec2 resolution){\n  vec2 cellOffset = vec2(0.0, 0.0);\n\n  //pure Neumann boundary conditions: 0 pressure gradient across the boundary\n  //dP/dx = 0\n  //walls\n  if(uv.x < 0.0) {\n    cellOffset.x = 1.0;\n\n  } else if(uv.x > 1.0) {\n    cellOffset.x = -1.0;\n\n  }\n\n  if(uv.y < 0.0) {\n    cellOffset.y = 1.0;\n\n  } else if(uv.y > 1.0) {\n    cellOffset.y = -1.0;\n\n  }\n\n  return texture2D(tex, uv + cellOffset / resolution).z;\n}\n\n\n\n\nvoid main(){\n  vec2 r = resolution * texPixelRatio;\n  vec4 data = texture2D(dataTex, gl_FragCoord.xy / r);\n\n  // 上下左右の圧力\n  float pLeft   = samplePressure_1_0(dataTex, (gl_FragCoord.xy - vec2(1.0, 0.0)) / r, r);\n  float pRight  = samplePressure_1_0(dataTex, (gl_FragCoord.xy + vec2(1.0, 0.0)) / r, r);\n  float pTop    = samplePressure_1_0(dataTex, (gl_FragCoord.xy - vec2(0.0, 1.0)) / r, r);\n  float pBottom = samplePressure_1_0(dataTex, (gl_FragCoord.xy + vec2(0.0, 1.0)) / r, r);\n\n  float divergence = data.w;\n  float pressure = (divergence * alpha + (pLeft + pRight + pTop + pBottom)) * 0.25 * beta;\n  gl_FragColor = vec4(data.xy, pressure, divergence);\n}\n"},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform float texPixelRatio;\nuniform float viscosity;\nuniform float forceRadius;\nuniform float forceCoefficient;\nuniform float autoforceCoefficient;\nuniform vec2 resolution;\nuniform sampler2D dataTex;\nuniform vec2 pointerPos;\nuniform vec2 beforePointerPos;\n\nfloat map_1_0(float value, float inputMin, float inputMax, float outputMin, float outputMax, bool clamp) {\n  if(clamp == true) {\n    if(value < inputMin) return outputMin;\n    if(value > inputMax) return outputMax;\n  }\n\n  float p = (outputMax - outputMin) / (inputMax - inputMin);\n  return ((value - inputMin) * p) + outputMin;\n}\n\n\nfloat samplePressure_2_1(sampler2D tex, vec2 uv, vec2 resolution){\n  vec2 cellOffset = vec2(0.0, 0.0);\n\n  //pure Neumann boundary conditions: 0 pressure gradient across the boundary\n  //dP/dx = 0\n  //walls\n  if(uv.x < 0.0) {\n    cellOffset.x = 1.0;\n\n  } else if(uv.x > 1.0) {\n    cellOffset.x = -1.0;\n\n  }\n\n  if(uv.y < 0.0) {\n    cellOffset.y = 1.0;\n\n  } else if(uv.y > 1.0) {\n    cellOffset.y = -1.0;\n\n  }\n\n  return texture2D(tex, uv + cellOffset / resolution).z;\n}\n\n\n\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_3_2(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_3_2(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_3_3(vec3 x) {\n  return mod289_3_2(((x*34.0)+1.0)*x);\n}\n\nfloat snoise_3_4(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_3_2(i); // Avoid truncation effects in permutation\n  vec3 p = permute_3_3( permute_3_3( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\n\n\nvoid main(){\n  vec2 r = resolution * texPixelRatio;\n  vec2 uv = gl_FragCoord.xy / r;\n  vec4 data = texture2D(dataTex, uv);\n  vec2 v = data.xy;\n\n  vec2 offsetX = vec2(1.0, 0.0);\n  vec2 offsetY = vec2(0.0, 1.0);\n\n  // 上下左右の圧力\n  float pLeft   = samplePressure_2_1(dataTex, (gl_FragCoord.xy - offsetX) / r, r);\n  float pRight  = samplePressure_2_1(dataTex, (gl_FragCoord.xy + offsetX) / r, r);\n  float pTop    = samplePressure_2_1(dataTex, (gl_FragCoord.xy - offsetY) / r, r);\n  float pBottom = samplePressure_2_1(dataTex, (gl_FragCoord.xy + offsetY) / r, r);\n\n  // マウス\n  vec2 mPos = vec2(pointerPos.x * texPixelRatio, r.y - pointerPos.y * texPixelRatio);\n  vec2 mPPos = vec2(beforePointerPos.x * texPixelRatio, r.y - beforePointerPos.y * texPixelRatio);\n  vec2 mouseV = mPos - mPPos;\n  float len = length(mPos - uv * r) / forceRadius / texPixelRatio;\n  float d = clamp(1.0 - len, 0.0, 1.0) * length(mouseV) * forceCoefficient;\n  vec2 mforce = d * normalize(mPos - uv * r + mouseV);\n\n  // 自動\n  float noiseX = snoise_3_4(vec2(uv.s, time / 5000.0 + uv.t));\n  float noiseY = snoise_3_4(vec2(time / 5000.0 + uv.s, uv.t));\n  float waveX = cos(time / 1000.0 + noiseX) * sin(time / 400.0 + noiseX) * cos(time / 600.0 + noiseX);\n  float waveY = sin(time / 500.0 + noiseY) * cos(time / 800.0 + noiseY) * sin(time / 400.0 + noiseY);\n  waveX = map_1_0(waveX, -1.0, 1.0, -0.2, 1.2, true);\n  waveY = map_1_0(waveY, -1.0, 1.0, -0.2, 1.2, true);\n  vec2 aPos = vec2(\n    r.x * waveX,\n    r.y * waveY\n  );\n  len = length(aPos - uv * r) / forceRadius / texPixelRatio / 10.0;\n  d = clamp(1.0 - len, 0.0, 1.0) * autoforceCoefficient;\n  vec2 aforce = d * normalize(aPos - uv * r);\n\n  v += vec2(pRight - pLeft, pBottom - pTop) * 0.5;\n  v += mforce + aforce;\n  v *= viscosity;\n  gl_FragColor = vec4(v, data.zw);\n}\n"},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float texPixelRatio;\nuniform float attenuation;\nuniform vec2 resolution;\nuniform sampler2D dataTex;\n\nvec2 sampleVelocity_1_0(sampler2D tex, vec2 uv, vec2 resolution){\n  vec2 cellOffset = vec2(0.0, 0.0);\n  vec2 multiplier = vec2(1.0, 1.0);\n\n  //free-slip boundary: the average flow across the boundary is restricted to 0\n  //avg(uA.xy, uB.xy) dot (boundary normal).xy = 0\n  //walls\n  if(uv.x < 0.0) {\n    cellOffset.x = 1.0;\n    multiplier.x = -1.0;\n\n  } else if(uv.x > 1.0) {\n    cellOffset.x = -1.0;\n    multiplier.x = -1.0;\n  }\n\n  if(uv.y < 0.0) {\n    cellOffset.y = 1.0;\n    multiplier.y = -1.0;\n\n  } else if(uv.y > 1.0) {\n    cellOffset.y = -1.0;\n    multiplier.y = -1.0;\n  }\n\n  return multiplier * texture2D(tex, uv + cellOffset / resolution).xy;\n}\n\n\n\nfloat samplePressure_2_1(sampler2D tex, vec2 uv, vec2 resolution){\n  vec2 cellOffset = vec2(0.0, 0.0);\n\n  //pure Neumann boundary conditions: 0 pressure gradient across the boundary\n  //dP/dx = 0\n  //walls\n  if(uv.x < 0.0) {\n    cellOffset.x = 1.0;\n\n  } else if(uv.x > 1.0) {\n    cellOffset.x = -1.0;\n\n  }\n\n  if(uv.y < 0.0) {\n    cellOffset.y = 1.0;\n\n  } else if(uv.y > 1.0) {\n    cellOffset.y = -1.0;\n\n  }\n\n  return texture2D(tex, uv + cellOffset / resolution).z;\n}\n\n\n\n\nvec2 bilerpVelocity(sampler2D tex, vec2 p, vec2 resolution) {\n  vec4 ij; // i0, j0, i1, j1\n  ij.xy = floor(p - 0.5) + 0.5;\n  ij.zw = ij.xy + 1.0;\n\n  vec4 uv = ij / resolution.xyxy;\n  vec2 d11 = sampleVelocity_1_0(tex, uv.xy, resolution);\n  vec2 d21 = sampleVelocity_1_0(tex, uv.zy, resolution);\n  vec2 d12 = sampleVelocity_1_0(tex, uv.xw, resolution);\n  vec2 d22 = sampleVelocity_1_0(tex, uv.zw, resolution);\n\n  vec2 a = p - ij.xy;\n\n  return mix(mix(d11, d21, a.x), mix(d12, d22, a.x), a.y);\n}\n\nvoid main(){\n  vec2 r = resolution * texPixelRatio;\n  vec2 p = gl_FragCoord.xy - sampleVelocity_1_0(dataTex, gl_FragCoord.xy / r, r);\n  gl_FragColor = vec4(bilerpVelocity(dataTex, p, r) * attenuation, samplePressure_2_1(dataTex, gl_FragCoord.xy / r, r), 0.0);\n}\n"},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform float texPixelRatio;\nuniform float devicePixelRatio;\nuniform vec2 resolution;\nuniform vec2 texResolution;\nuniform sampler2D tex;\n\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_3_0(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_3_0(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_3_1(vec3 x) {\n  return mod289_3_0(((x*34.0)+1.0)*x);\n}\n\nfloat snoise_3_2(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_3_0(i); // Avoid truncation effects in permutation\n  vec3 p = permute_3_1( permute_3_1( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\n\nfloat map_1_3(float value, float inputMin, float inputMax, float outputMin, float outputMax, bool clamp) {\n  if(clamp == true) {\n    if(value < inputMin) return outputMin;\n    if(value > inputMax) return outputMax;\n  }\n\n  float p = (outputMax - outputMin) / (inputMax - inputMin);\n  return ((value - inputMin) * p) + outputMin;\n}\n\n\nvec3 hsv2rgb_2_4(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\n\nvoid main(){\n  float offsetT =  -resolution.y * 0.5;\n  float uvT = gl_FragCoord.y / texResolution.y / texPixelRatio;\n  vec2 uv = vec2(\n    gl_FragCoord.x / texResolution.x / texPixelRatio - resolution.x * 0.5,\n    uvT + offsetT\n  );\n  uv.x += (step(1.0, mod(float(uvT + offsetT), 2.0)) * uv.x / resolution.x);\n  float noiseValue = snoise_3_2(gl_FragCoord.xy / resolution * 1.4);\n\n  vec4 color = texture2D(tex, uv);\n  color.r = color.a;\n  color.g = color.a;\n  color.b = color.a;\n  color.a = 1.0;\n  vec4 addColor = vec4(hsv2rgb_2_4(vec3(\n    map_1_3(noiseValue, -1.0, 1.0, 0.7, 0.9, true),\n    map_1_3(noiseValue, -1.0, 1.0, 0.8, 0.9, true),\n    map_1_3(noiseValue, -1.0, 1.0, 0.8, 0.9, true)\n  )), 1.0);\n\n  gl_FragColor = color - addColor;\n}\n"},function(e,t){e.exports="precision mediump float;\n#define GLSLIFY 1\n\nvoid main(){\n  gl_FragColor = vec4(0.0);\n}\n"},function(e,t,n){"use strict";t.a=function(){return null!=window.console?null!=window.console.log.bind?window.console.log.bind(window.console):window.console.log:window.alert}()}]);